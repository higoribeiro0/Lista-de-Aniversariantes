{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\n\nconst useFetch = urlParams => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState({\n    show: false,\n    msg: ''\n  });\n  const [data, setData] = useState(null);\n\n  const fetchMovies = async url => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data.Response === 'True') {\n        setData(data.Search || data);\n        setError({\n          show: false,\n          msg: ''\n        });\n      } else {\n        setError({\n          show: true,\n          msg: data.Error\n        });\n      }\n\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies(`${API_ENDPOINT}${urlParams}`);\n  }, [urlParams]);\n  return {\n    isLoading,\n    error,\n    data\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/higor/Dev/src/useFetch.js"],"names":["React","useState","useEffect","API_ENDPOINT","process","env","REACT_APP_MOVIE_API_KEY","useFetch","urlParams","isLoading","setIsLoading","error","setError","show","msg","data","setData","fetchMovies","url","response","fetch","json","Response","Search","Error","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,MAAMC,YAAY,GAAI,mCAAkCC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,EAA5F;;AAEA,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMgB,WAAW,GAAG,MAAOC,GAAP,IAAe;AACjCR,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMH,IAAI,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIN,IAAI,CAACO,QAAL,KAAkB,MAAtB,EAA8B;AAC5BN,QAAAA,OAAO,CAACD,IAAI,CAACQ,MAAL,IAAeR,IAAhB,CAAP;AAEAH,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,GAAG,EAAE;AAApB,SAAD,CAAR;AACD,OAJD,MAIO;AACLF,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,GAAG,EAAEC,IAAI,CAACS;AAAxB,SAAD,CAAR;AACD;;AACDd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACdc,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD;AACF,GAjBD;;AAmBAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAAE,GAAEd,YAAa,GAAEK,SAAU,EAA7B,CAAX;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGA,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA,KAAb;AAAoBI,IAAAA;AAApB,GAAP;AACD,CA3BD;;AA6BA,eAAeR,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\n\nconst useFetch = (urlParams) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState({ show: false, msg: '' })\n  const [data, setData] = useState(null)\n  const fetchMovies = async (url) => {\n    setIsLoading(true)\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n\n      if (data.Response === 'True') {\n        setData(data.Search || data)\n\n        setError({ show: false, msg: '' })\n      } else {\n        setError({ show: true, msg: data.Error })\n      }\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies(`${API_ENDPOINT}${urlParams}`)\n  }, [urlParams])\n  return { isLoading, error, data }\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}