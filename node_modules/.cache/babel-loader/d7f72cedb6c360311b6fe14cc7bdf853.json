{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\higor\\\\Dev\\\\src\\\\context.js\";\nimport React, { useState, useContext, useEffect } from 'react'; // make sure to use https\n\nimport useFetch from './useFetch';\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [query, setQuery] = useState('batman');\n  const {\n    isLoading,\n    error,\n    data: movies\n  } = useFetch(`&s=${query}`);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isLoading,\n      error,\n      movies,\n      query,\n      setQuery\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["C:/Users/higor/Dev/src/context.js"],"names":["React","useState","useContext","useEffect","useFetch","API_ENDPOINT","process","env","REACT_APP_MOVIE_API_KEY","AppContext","createContext","AppProvider","children","query","setQuery","isLoading","error","data","movies","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,MAAMC,YAAY,GAAI,mCAAkCC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,EAA5F;AACP,MAAMC,UAAU,GAAGT,KAAK,CAACU,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,MAAqCd,QAAQ,CAAE,MAAKS,KAAM,EAAb,CAAnD;AAEA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBE,MAAAA,MAApB;AAA4BL,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CATD,C,CAUA;;;AACA,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AACpC,SAAOjB,UAAU,CAACO,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\n// make sure to use https\nimport useFetch from './useFetch'\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState('batman')\n  const { isLoading, error, data: movies } = useFetch(`&s=${query}`)\n\n  return (\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"]},"metadata":{},"sourceType":"module"}