{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\higor\\\\Dev\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport data from './data';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let amount = parseInt(count);\n\n    if (count <= 0) {\n      amount = 1;\n    }\n\n    if (count > 8) {\n      amount = 8;\n    }\n\n    setText(data.slice(0, amount));\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"tired of boring lorem ipsum?\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"lorem-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"paragraphs:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    id: \"amount\",\n    value: count,\n    onChange: e => setCount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"generate\")), /*#__PURE__*/React.createElement(\"article\", {\n    className: \"lorem-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, text.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }\n    }, item);\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/higor/Dev/src/App.js"],"names":["React","useState","data","App","count","setCount","text","setText","handleSubmit","e","preventDefault","amount","parseInt","slice","target","value","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACR,KAAD,CAArB;;AACA,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACdO,MAAAA,MAAM,GAAG,CAAT;AACD;;AACD,QAAIP,KAAK,GAAG,CAAZ,EAAe;AACbO,MAAAA,MAAM,GAAG,CAAT;AACD;;AACDJ,IAAAA,OAAO,CAACL,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcF,MAAd,CAAD,CAAP;AACD,GAVD;;AAWA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEH,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAFF,eAaE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,wBAAO;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBD,IAAhB,CAAP;AACD,GAFA,CADH,CAbF,CADF;AAqBD;;AAED,eAAed,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport data from './data';\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let amount = parseInt(count);\n    if (count <= 0) {\n      amount = 1;\n    }\n    if (count > 8) {\n      amount = 8;\n    }\n    setText(data.slice(0, amount));\n  };\n  return (\n    <section className='section-center'>\n      <h3>tired of boring lorem ipsum?</h3>\n      <form className='lorem-form' onSubmit={handleSubmit}>\n        <label htmlFor='amount'>paragraphs:</label>\n        <input\n          type='number'\n          name='amount'\n          id='amount'\n          value={count}\n          onChange={(e) => setCount(e.target.value)}\n        />\n        <button className='btn'>generate</button>\n      </form>\n      <article className='lorem-text'>\n        {text.map((item, index) => {\n          return <p key={index}>{item}</p>;\n        })}\n      </article>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}